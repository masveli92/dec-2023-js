// function calculateVolumeAndArea (a) {
//     let v;
//     let s;
//     if (isNaN(a) || a<=0 || !Number.isInteger(a)){
//       return console.log('При вычислении произошла ошибка')
//     } else {
//         v = a*a*a;
//         s = 6*a*a;
//       return  console.log(`Объем куба: ${v}, площадь всей поверхности: ${s}`)
//     }
// }
// calculateVolumeAndArea(12.1);


// function getCoupeNumber(n) {
// if(isNaN(n) || n<0 || !Number.isInteger(n)){
//     return console.log("Ошибка. Проверьте правильность введенного номера места")
// } else if (n===0 || n>36){
//     return console.log("Таких мест в вагоне не существует")
// } else {
//     return console.log(Math.ceil(n/4));
// } }
// getCoupeNumber(36)

// Создайте функцию, которая принимает в себя целое число минут и возвращает время в нужном формате строки. (Смотри пример).
// Обратите внимание на окончание слова "час" - оно меняется в зависимости от цифры. Если вместо аргумента приходит не число,
// дробное или отрицательное число - функция возвращает строку "Ошибка, проверьте данные"
//
// Внимание! Давайте пока ограничимся максимум 600ю минутами (10 часов). Так как проверки на большие числа будут раздувать
// код (33 часа, 31 час, 11 часов и тд). Этого будет достаточно и код будет проверять именно этот промежуток (1 - 10 часов).
// Но вы можете реализовать и полный скрипт, он тоже должен проходить тесты.
//     Пример:
// getTimeFromMinutes(150) => "Это 2 часа и 30 минут"
// getTimeFromMinutes(50) => "Это 0 часов и 50 минут"
// getTimeFromMinutes(0) => "Это 0 часов и 0 минут"
// getTimeFromMinutes(-150) => "Ошибка, проверьте данные"

// function getTimeFromMinutes(t) {
// let hour = Math.trunc(t/60);
// let min = t%60;
// if( isNaN(t) || t<0 || !Number.isInteger(t)){
//     return "Ошибка, проверьте данные"
// }
// if (hour===1){
//     return `Это ${hour} час и ${min} минут`
// }
// if (hour>1 && hour<5){
//         return `Это ${hour} часа и ${min} минут`
//     }
// if (hour===0 || hour>4 && hour<11){
//         return `Это ${hour} часов и ${min} минут`
//     }
// }
// console.log(getTimeFromMinutes(320))

// 2) Напишите функцию, которая принимает в себя 4 числа и возвращает самое большее из них. Если один из аргументов не
// является числом или их меньше 4 - возвращается 0. Дробные числа разрешены.
//
//     Пример:
//
// findMaxNumber(1, 5, 6.6, 11); =>  11
//
// findMaxNumber(1, 5, '6', '10');  =>  0

// function findMaxNumber(a,b,c,d) {
//     if (typeof(a) !== 'number' ||
//         typeof(b) !== 'number' ||
//         typeof(c) !== 'number' ||
//         typeof(d) !== 'number') {
//         return 0;
//     } else {
//         return Math.max(a, b ,c, d);
//     }
// }
// findMaxNumber(1, 5, 6.6, 11)

// Создайте функцию, которая будет принимать в себя один аргумент-целое положительное число. Она должна возвращать
// строку, в которой будут через пробел выведены числа Фибоначчи. Причем, их количество должно быть равно переданному
// аргументу.
// Если переданный аргумент не число - вернуть пустую строку. Решать без применения рекурсии.
//     Пример:
// fib(4) => "0 1 1 2"
// fib(7) => "0 1 1 2 3 5 8"
// fib('7') => ""
// fib(1) => "0"
// fib(0) => ""

// function fib(n) {
//     if (typeof(n) !== 'number' || n <= 0 || !Number.isInteger(n)) {
//         return "";
//     }
//     let str="";
//     let first = 0;
//     let second = 1;
//
//     for (let i = 0; i < n; i++) {
//         if (i + 1 === n) {
//             str += `${first}`;
//         } else {
//             str += `${first} `;
//         }
//
//         let third = first + second;
//         first = second;
//         second = third;
//     }
//     return str;

// }